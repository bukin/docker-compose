version: "3.9"

x-networks: &networks
    networks:
        - app-network

x-working_dir: &working_dir
    working_dir: /var/www/${COMPOSE_PROJECT_NAME}

services:

    # PHP service
    php:
        build:
            context: ./docker/php/
            dockerfile: ./Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-php
        <<: *working_dir
        environment:
            XDEBUG_CONFIG: "remote_host=host.docker.internal remote_enable=1"
            PHP_IDE_CONFIG: serverName=${COMPOSE_PROJECT_NAME}
            XDEBUG_SESSION: "docker-server"
            APP_DEBUG: "true"
            TZ: "Europe/Moscow"
            ARTISAN_PATH: /var/www/${COMPOSE_PROJECT_NAME}/artisan
        volumes:
            - ./:/var/www/${COMPOSE_PROJECT_NAME}:delegated
            - ./docker/php/configs/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./docker/php/configs/opcache-custom.ini:/usr/local/etc/php/conf.d/opcache-custom.ini
            - ./docker/php/configs/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
            - ./docker/php/configs/xdebug-custom.ini:/usr/local/etc/php/conf.d/xdebug-custom.ini
            - ./docker/php/configs/supervisord.conf:/etc/supervisor/supervisord.conf
            - ./docker/php/configs/october-worker.conf:/etc/supervisor/conf.d/october-worker.conf
            - ./docker/php/aliases.sh:/etc/profile.d/aliases.sh
        command:
            - /bin/sh
            - -c
            - supervisord -c /etc/supervisor/supervisord.conf
            - supervisorctl start all
        <<: *networks

    # MySQL database service
    mysql:
        image: mysql:5.7
        container_name: ${COMPOSE_PROJECT_NAME}-mysql
        restart: unless-stopped
        tty: true
        volumes:
            - ./docker/mysql/db/:/var/lib/mysql:delegated
            - ./docker/mysql/config/my.cnf:/etc/mysql/my.cnf
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        <<: *networks

    # Nginx service
    nginx:
        build:
            context: ./docker/nginx/
            dockerfile: ./Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}-nginx
        <<: *working_dir
        volumes:
            - ./:/var/www/${COMPOSE_PROJECT_NAME}:delegated
            - ./docker/nginx/templates:/etc/nginx/templates:rw,cached
            - ./docker/nginx/configs/nginx.conf:/etc/nginx/nginx.conf
        environment:
            APP_DIR: ${COMPOSE_PROJECT_NAME}
        depends_on:
            - php
            - mysql
        ports:
            - "8000:80"
        <<: *networks

    elasticsearch:
        image: elasticsearch:7.16.2
        container_name: ${COMPOSE_PROJECT_NAME}-elasticsearch
        volumes:
            - ./docker/elasticsearch/data/:/usr/share/elasticsearch/data:delegated
        environment:
            - discovery.type=single-node
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
        ports:
            - "9200:9200"
        <<: *networks

networks:
    app-network:
        driver: bridge
        name: ${COMPOSE_PROJECT_NAME}-network
